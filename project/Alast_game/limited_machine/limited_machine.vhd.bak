Library IEEE;
Use IEEE.std_logic_1164.all;
USE IEEE.std_logic_signed.all;
entity limited_machine is
	port(
        consequence:std_logic_vector(15 downto 0)
	);
end entity limited_machine;
architecture main of limited_machine is
    signal FD:std_logic_vector(50 downto 0);
    type arr is array(0 to 10) of integer range 0 to 15
    signal func:arr:=(2,10,5,12,6,11,5,13,2,10,2);--//10 +//11 -//12 *//13 %//
    --                  2+5*6-5/2+2=
    type arr2 is array(0 to 10) of integer range 0 to 9999;
    signal temp:arr2:=(0,0,0,0,0,0,0,0,0,0,0);
    signal fsm:integer range 0 to 100:=0;
    constant len:integer range 0 to 10 :=10;
begin
    fre:process(clk)
    begin
        if rising_edge(clk)then
            FD<=FD+1;
        end if;
    end process;
    machine:process(FD(23))
        type iarray is array(0 to 10) of integer range 0 to 10;
        variable i:iarray:=(0,0,0,0,0,0,0,0,0,0,0);
        variable sorting:integer:=0;
        variable xmod_flag:std_logic:='0';
        variable plminu:std_logic:='0';
        variable len2:integer range 0 to 10:=0;
    begin
        if rising_edge(FD(23))then
            case fsm is
                when 0 =>
                when 1 =>--*/ operator
                    if func(i(1))=12 then
                        if xmod_flag='0' then
                            func(i(1))<= (func(i(1)-1))* (func(i(1)+1));
                            func(i(1)-1):=15;
                            func(i(1)+1):=15;
                            func(i(1))  :=15;
                        else
                            func(i(1))<= (func(i(1)+1))*func(i(1)-2);
                            func(i(1)-2):=15;
                            func(i(1)+1):=15;
                            func(i(1))  :=15;
                        end if;
                        xmod_flag:='1';
                    elsif func(i(1))=13 then
                        if xmod_flag='0' then
                            func(i(1))<=(func(i(1)-1))/(func(i(1)+1));
                            func(i(1)-1):=15;
                            func(i(1)+1):=15;
                            func(i(1))  :=15;
                        else
                            func(i(1))<=func(i(1)-2)/func(i(1)+1);
                            func(i(1)-2):=15;
                            func(i(1)+1):=15;
                            func(i(1))  :=15;
                        end if;
                        xmod_flag:='1';
                    elsif func(i(1))=10 or func(i(1))=11 then
                        xmod_flag:='0';
                    end if;
                    if i(1)<len then
                        fsm<=1;
                    else
                        fsm<=2;
                    end if;
                    i(1):=i(1)+1;
                when 2 => --sort array
                    if func(i(2))=15 then
                        len2:=len2+1;
                    else
                        func(sorting)<=func(i(2));
                    end if;
                    if i(2)>len then
                        i(2):=0;
                        len2:=len-len2;
                        fsm<=3;
                    end if;
                    i(2):=i(2)+1;
                    sorting:=sorting+1;
                when 3 =>
                    if func(i)=10 then
                        if plminu='0' then
                            func(i(1))<= (func(i(1)-1)) + (func(i(1)+1));
                        else
                            func(i(1))<= (func(i(1)+1)) + (func(i(1)-2));
                        end if;
                        plminu:='1';
                    elsif func(i)=11 then
                        if plminu='0' then
                            func(i(1)) <= (func(i(1)-1)) - (func(i(1)+1));
                        else
                            func(i(1)) <= (func(i(1)-2)) - (func(i(1)+1));
                        end if;
                    end if;
                    if i(3)>len2 then
                        fsm<=4;
                    end if;
                    i(3):=i(3)+1;
                when 4 =>
                    consequence<=conv_std_logic_vector(func(len2-1),16);
                when others =>
                    fsm = 0;
            end case;
        end if;
    end process;
end main;

	